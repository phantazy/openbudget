import asyncio
from quart import Quart, request, jsonify
from quart_cors import cors
from telethon import TelegramClient
from telethon.errors import SessionPasswordNeededError

# --- –ù–∞—Å—Ç—Ä–æ–π–∫–∏ ---
API_ID = 26595249  # –£–∫–∞–∂–∏ —Å–≤–æ–π API ID
API_HASH = "9480dce5299fb30b4e520242dd6d87d8"  # –£–∫–∞–∂–∏ —Å–≤–æ–π API Hash
SESSION_NAME = "session"  # –§–∞–π–ª —Å–µ—Å—Å–∏–∏ –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –≤—Ö–æ–¥–∞

app = Quart(__name__)
app = cors(app, allow_origin="*")

client = TelegramClient(SESSION_NAME, API_ID, API_HASH)

@app.post("/send_phone")
async def send_phone():
    try:
        data = await request.json
        phone_number = data.get("phone")

        if not phone_number:
            return jsonify({"success": False, "error": "–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –æ–±—è–∑–∞—Ç–µ–ª–µ–Ω"}), 400

        await client.connect()
        if not await client.is_user_authorized():
            await client.send_code_request(phone_number)

        return jsonify({"success": True, "message": "–ö–æ–¥ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω"}), 200

    except Exception as e:
        print("–û—à–∏–±–∫–∞ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ:", str(e))  # –õ–æ–≥ –æ—à–∏–±–∫–∏ –≤ —Ç–µ—Ä–º–∏–Ω–∞–ª
        return jsonify({"success": False, "error": str(e)}), 500

@app.post("/send_code")
async def send_code():
    try:
        data = await request.json
        phone_number = data.get("phone")
        code = data.get("code")

        if not phone_number or not code:
            return jsonify({"success": False, "error": "–ù–æ–º–µ—Ä –∏ –∫–æ–¥ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã"}), 400

        await client.connect()
        if not await client.is_user_authorized():
            await client.sign_in(phone_number, code)

        return jsonify({"success": True, "message": "–í—Ö–æ–¥ –≤—ã–ø–æ–ª–Ω–µ–Ω"}), 200

    except SessionPasswordNeededError:
        return jsonify({"success": False, "error": "–ù—É–∂–µ–Ω –ø–∞—Ä–æ–ª—å 2FA"}), 401
    except Exception as e:
        print("–û—à–∏–±–∫–∞ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ:", str(e))
        return jsonify({"success": False, "error": str(e)}), 500

if __name__ == "__main__":
    print("üöÄ –°–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω –Ω–∞ http://127.0.0.1:5701")
    asyncio.run(app.run(host="127.0.0.1", port=5701, debug=True))

